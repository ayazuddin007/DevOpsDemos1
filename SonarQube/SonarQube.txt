======================================================
1) SonarQube Installation and Integration with Jenkins
======================================================
Prequisite
-----------------
- Amazon RHEL 8 t2.small instance
- Mysql Client with java

Install new EC2 Amazon Instance
----------------------------------------
 Type: t2.small
 Tag: Name-SonarQube-Server
Security Group: SonarQube-SG                            (SonarQube Runs on port no 9000)

SSH to SonarQube-Server
-----------------------------
# Become Root
    sudo su -

# Install Java and set JAVA_HOME Environment Variable
   yum install java-1.8* -y
  find /usr/lib/jvm/java-1.8* | head -n 3
  vi .bash_profile 
  source ~/.bash_profile

#Install Mysql-Server
  
  mysql -u root -p
  password: root123

  use mysql;
  CREATE DATABASE sonar CHARACTER SET utf8 COLLATE utf8_general_ci;
  CREATE USER sonar@localhost IDENTIFIED BY 'sonar';
  CREATE USER sonar@'%' IDENTIFIED BY 'sonar';
  GRANT ALL ON sonar.* TO sonar@localhost;
  GRANT ALL ON sonar.* TO sonar@'%';
  select User, Host from mysql.user;
  FLUSH PRIVILEGES;
  exit

 mysql -u sonar -p
 password: sonar
 show databases;
 exit
 
  
# SonarQube Download,Installation and Configuration
  1. Go to opt directory
      cd /opt
  2. Go to Official Website 
       https://www.sonarqube.org/
  3. Install wget and unzip package
      yum install wget unzip -y
  4. Download SonarQube LTS 6.7 Community Edition package
      wget  https://binaries.sonarsource.com/Distribution/sonarqube/sonarqube-6.7.7.zip
  5. unzip SonarQube
      ls
      unzip sonarqube-6.7.7.zip
  6. Change sanarqube directory name
     mv sonarqube-6.7.7 sonarqube
  7. Remove sonarqube zip file
     rm -rf  sonarqube-6.7.7.zip
  
# Create a user as sonaradmin to manage sonarqube directories
    cd
    useradd sonaradmin
    passwd sonaradmin

# Changing sonarqube folder ownership to sonaradmin user
   cd  /opt
   chown -R sonaradmin:sonaradmin /opt/sonarqube
   ll -a

# Edit sonar properties file and uncomment following
   cd
   vi  /opt/sonarqube/conf/sonar.properties 
   sonar.jdbc.username=sonar
   sonar.jdbc.password=sonar
   sonar.jdbc.url=jdbc:mysql://<RDS_DATABAE_ENDPOINT>:3306/sonar?useUnicode=true&characterEncoding=utf8&rewriteBatchedStatements=true&useConfigs=maxPerformance&useSSL=false
                                    OR
   sonar.jdbc.url=jdbc:mysql://localhost:3306/sonar?useUnicode=true&characterEncoding=utf8&rewriteBatchedStatements=true&useConfigs=maxPerformance&useSSL=false
   sonar.web.host=0.0.0.0
  
We have given access to sonaradmin and done required configuration in SonarQube-Server  

=========================================================================
2) RDS database setup for SonarQube
=========================================================================
RDS Database: sonarqubedb
RDS Username: sonarqubedb
RDS Password: sonar123

# SonarQube as a service
become sonaradmin user
 su - sonaradmin
  

# start sonar.sh and check status
cd  /opt/sonarqube/bin/linux-x86-64/
 ./sonar.sh start  
 ./sonar.sh status

# Access SonarQube from browser
 http://<SonarQubeServer-PublicIP>:9000
 
# SonarQube Bydefault Login Credentials
   UN: admin
   PASS: admin

=============================================================================
3) Sonar Sanner Integration with Jenkins Server
=============================================================================

#SSH to jenkins server
 1. become root user
   sudo su - 

2. Go to /opt dir
  cd /opt

3.  Download SonarQube Scanner
   wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.0.0.1744-linux.zip
   
4. Install Unzip
    yum install unzip -y

 5. Unzip Sonar Scanner
   unzip sonar-scanner-cli-4.0.0.1744-linux.zip
    
 6. Rename as sonar-scanner
   ls
   mv sonar-scanner-4.0.0.1744-linux/  sonar-scanner

 7. Remove sonar-scanner zip file
  rm -rf sonar-scanner-cli-4.0.0.1744-linux.zip

 8. Configure sonar-scanner.properties
  cd  sonar-scanner/conf
  cat sonar-scanner.properties
  vi sonar-scanner.properties
     - Uncomment SonarQube Server
        sonar.host.url=http://<sonarqube server private ip address>:9000
     - save+quit

On SonarQube Server
============================
# Genarate Sonar Authentication token
  Login to SonarQube server as a admin My Account > Security > Generate Token
  Enter Token Name: sonar-token   
  click on Generate.
  f05e055fdd72042831ad2687f1e6aa19ef36b9e2

On Jenkins Server
============================
1. Login to Jenkins GUI console and install " SonarQube scanner" plugin

 Manage Jenkins > Manage Plugins > Avalable > SonarQube scanner
 
2. Configure SonarQube scanner home path

Manage Jenkins > Global Tool Configuration > SonarQube Scanner
Name : sonar-scanner
Path : /opt/sonar-scanner  

3. Configure SonarQube server name and authentication token

Manage Jenkins > Configure Systems > SonarQube Servers
Name : SonarQube-Server
ServerURL : http://<Sonarqube_server public ip>:9000
Server authentication token:

 Go to Credentials:
  Kind: Secret Text
  Scope: Global
  Secret: f05e055fdd72042831ad2687f1e6aa19ef36b9e2
  ID: sonarAdmin
  Description: sonarAdmin
  click on ok

Create Jenkins Job
---------------------------
Item Name: 
	sonarqube-demo
	Maven

Source Code Management:
	Git :  https://github.com/ayazuddin007/hello-world.git
Build: 
 	Root POM : pom.xml
	 Goals and options : clean install package
Post Steps:
	Execute SonarQube Scanner
		JDK: JAVA HOME
		Analysis properties:
			sonar.projectKey=hello-world
			sonar.projectName=hello-world
			sonar.projectVersion=1.0
			sonar.sources=/var/lib/jenkins/workspace/$JOB_NAME/webapp/src
			sonar.language=java
			sonar.sourceEncoding=UTF-8
			sonar.java.binaries=/var/lib/jenkins/workspace/$JOB_NAME/target/classes
			sonar.junit.reportsPath=/var/lib/jenkins/workspace/$JOB_NAME/server/target/surefire-reports
			sonar.jacoco.reportPath=/var/lib/jenkins/workspace/$JOB_NAME/server/target/jacoco.exec

save and Build the job
if Build Success then click on blue icon in same line of build number,which will redirct to sonarqube

Different sonarqube analysis
----------------------------------
sonar.projectKey=SimpleCustomer
sonar.projectName=SimpleCustomerApp
sonar.projectVersion=1.0
sonar.sources=/var/lib/jenkins/workspace/$JOB_NAME/SimpleCustomerApp/src
sonar.language=java
sonar.sourceEncoding=UTF-8
sonar.java.binaries=/var/lib/jenkins/workspace/jenkins_sonar_demo/SimpleCustomerApp/build/classes

sonar.projectKey=maven-demo
sonar.projectName=maven-demo
sonar.projectVersion=1.0
sonar.sources=/var/lib/jenkins/workspace/$JOB_NAME/src
sonar.language=java
sonar.sourceEncoding=UTF-8
sonar.java.binaries=/var/lib/jenkins/workspace/$JOB_NAME/target/classes
sonar.junit.reportsPath=/var/lib/jenkins/workspace/$JOB_NAME/target/surefire-reports
sonar.jacoco.reportPath=/var/lib/jenkins/workspace/$JOB_NAME/target/jacoco.exec








 
  
